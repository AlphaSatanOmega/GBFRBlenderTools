# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Entities

from .flatbuffers import *
from .flatbuffers.compat import import_numpy
np = import_numpy()

class ModelInfo_A10(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = encode.Get(packer.uoffset, buf, offset)
        x = ModelInfo_A10()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsModelInfo_A10(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # ModelInfo_A10
    def Init(self, buf, pos):
        self._tab = table.Table(buf, pos)

    # ModelInfo_A10
    def UnkId(self):
        o = number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # ModelInfo_A10
    def A2(self):
        o = number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

    # ModelInfo_A10
    def A3(self):
        o = number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(number_types.Int8Flags, o + self._tab.Pos)
        return 0

    # ModelInfo_A10
    def A4(self):
        o = number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(number_types.Int8Flags, o + self._tab.Pos)
        return 0

def ModelInfo_A10Start(builder):
    builder.StartObject(4)

def Start(builder):
    ModelInfo_A10Start(builder)

def ModelInfo_A10AddUnkId(builder, unkId):
    builder.PrependUint32Slot(0, unkId, 0)

def AddUnkId(builder, unkId):
    ModelInfo_A10AddUnkId(builder, unkId)

def ModelInfo_A10AddA2(builder, a2):
    builder.PrependFloat32Slot(1, a2, 0.0)

def AddA2(builder, a2):
    ModelInfo_A10AddA2(builder, a2)

def ModelInfo_A10AddA3(builder, a3):
    builder.PrependInt8Slot(2, a3, 0)

def AddA3(builder, a3):
    ModelInfo_A10AddA3(builder, a3)

def ModelInfo_A10AddA4(builder, a4):
    builder.PrependInt8Slot(3, a4, 0)

def AddA4(builder, a4):
    ModelInfo_A10AddA4(builder, a4)

def ModelInfo_A10End(builder):
    return builder.EndObject()

def End(builder):
    return ModelInfo_A10End(builder)
