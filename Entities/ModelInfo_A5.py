# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Entities

from .flatbuffers import *
from .flatbuffers.compat import import_numpy
np = import_numpy()

class ModelInfo_A5(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = encode.Get(packer.uoffset, buf, offset)
        x = ModelInfo_A5()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsModelInfo_A5(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # ModelInfo_A5
    def Init(self, buf, pos):
        self._tab = table.Table(buf, pos)

    # ModelInfo_A5
    def UnkId(self):
        o = number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # ModelInfo_A5
    def Unk(self):
        o = number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(number_types.Int8Flags, o + self._tab.Pos)
        return 0

def ModelInfo_A5Start(builder):
    builder.StartObject(2)

def Start(builder):
    ModelInfo_A5Start(builder)

def ModelInfo_A5AddUnkId(builder, unkId):
    builder.PrependUint32Slot(0, unkId, 0)

def AddUnkId(builder, unkId):
    ModelInfo_A5AddUnkId(builder, unkId)

def ModelInfo_A5AddUnk(builder, unk):
    builder.PrependInt8Slot(1, unk, 0)

def AddUnk(builder, unk):
    ModelInfo_A5AddUnk(builder, unk)

def ModelInfo_A5End(builder):
    return builder.EndObject()

def End(builder):
    return ModelInfo_A5End(builder)
