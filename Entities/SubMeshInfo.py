# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Entities

from .flatbuffers import *
from .flatbuffers.compat import import_numpy
np = import_numpy()

class SubMeshInfo(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = encode.Get(packer.uoffset, buf, offset)
        x = SubMeshInfo()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsSubMeshInfo(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # SubMeshInfo
    def Init(self, buf, pos):
        self._tab = table.Table(buf, pos)

    # SubMeshInfo
    def Name(self):
        o = number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # SubMeshInfo
    def Bbox(self):
        o = number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            x = o + self._tab.Pos
            from .BoundaryBox import BoundaryBox
            obj = BoundaryBox()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

def SubMeshInfoStart(builder):
    builder.StartObject(2)

def Start(builder):
    SubMeshInfoStart(builder)

def SubMeshInfoAddName(builder, name):
    builder.PrependUOffsetTRelativeSlot(0, number_types.UOffsetTFlags.py_type(name), 0)

def AddName(builder, name):
    SubMeshInfoAddName(builder, name)

def SubMeshInfoAddBbox(builder, bbox):
    builder.PrependStructSlot(1, number_types.UOffsetTFlags.py_type(bbox), 0)

def AddBbox(builder, bbox):
    SubMeshInfoAddBbox(builder, bbox)

def SubMeshInfoEnd(builder):
    return builder.EndObject()

def End(builder):
    return SubMeshInfoEnd(builder)
